{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Node.js_08\\\\Desktop\\\\23.10.25\\\\B_team\\\\src\\\\pages\\\\mypage\\\\Mypage.jsx\",\n  _s = $RefreshSig$();\nimport { useLocation } from \"react-router-dom\";\nimport Navbarlogged from \"../../components/navbar/Navbarlogged\";\nimport { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport { DateRange } from \"react-date-range\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Mypage = props => {\n  _s();\n  var _location$state, _location$state2, _location$state3;\n  const location = useLocation();\n  const [date, setDate] = useState([{\n    startDate: new Date(),\n    endDate: new Date(),\n    key: 'selection'\n  }]);\n  const [openDate, setOpenDate] = useState(false);\n\n  // Use useEffect to fetch data from localStorage when the component mounts\n  useEffect(() => {\n    const stg = localStorage.getItem('data');\n    if (stg) {\n      const parsedData = JSON.parse(stg);\n      if (parsedData.ti) {\n        setDate(parsedData.ti.date || date);\n      }\n    }\n  }, []);\n  const title = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.title;\n  const area = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.area;\n  const img = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.img;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbarlogged, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC608\\uC57D \\uC815\\uBCF4 \\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC81C\\uBAA9: \", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC9C0\\uC5ED: \", area]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: \"ground\",\n        width: \"30%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lsItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC608\\uC57D \\uB0A0\\uC9DC \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setOpenDate(!openDate),\n        children: `${format(date[0].startDate, \"yy년MM월dd일\")}~${format(date[0].endDate, \"yy년MM월dd일\")}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Mypage, \"1qlxlOU6e4a5Lm5/3KdGqMYttvE=\", false, function () {\n  return [useLocation];\n});\n_c = Mypage;\nexport default Mypage;\n\n// const Mypage = () => {\n//     let [myinfo] = useState(mydata)\n//     let [myres] = useState(myre)\n//     return (\n//         <>\n//             <Navbarlogged />\n//             <div>\n//                 {myinfo.map((a, i) => {\n//                     return (\n//                         <My myinfo={myinfo[i]} i={i} />\n//                     )\n//                 })\n//                 }\n//             </div>\n//             <div>\n//                 {myres.map((a, i) => {\n//                     return (\n//                         <Myres myres={myres[i]} i={i} />\n//                     )\n//                 })\n//                 }\n//             </div>\n\n//         </>\n//     )\n// }\nvar _c;\n$RefreshReg$(_c, \"Mypage\");","map":{"version":3,"names":["useLocation","Navbarlogged","useState","useEffect","format","DateRange","jsxDEV","_jsxDEV","Fragment","_Fragment","Mypage","props","_s","_location$state","_location$state2","_location$state3","location","date","setDate","startDate","Date","endDate","key","openDate","setOpenDate","stg","localStorage","getItem","parsedData","JSON","parse","ti","title","state","area","img","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Node.js_08/Desktop/23.10.25/B_team/src/pages/mypage/Mypage.jsx"],"sourcesContent":["import { useLocation } from \"react-router-dom\";\r\nimport Navbarlogged from \"../../components/navbar/Navbarlogged\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport { DateRange } from \"react-date-range\";\r\n\r\nconst Mypage = (props) => {\r\n    const location = useLocation();\r\n    const [date, setDate] = useState([\r\n        {\r\n            startDate: new Date(),\r\n            endDate: new Date(),\r\n            key: 'selection'\r\n        }\r\n    ]);\r\n    const [openDate, setOpenDate] = useState(false);\r\n\r\n    // Use useEffect to fetch data from localStorage when the component mounts\r\n    useEffect(() => {\r\n        const stg = localStorage.getItem('data');\r\n        if (stg) {\r\n            const parsedData = JSON.parse(stg);\r\n            if (parsedData.ti) {\r\n                setDate(parsedData.ti.date || date);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const title = location.state?.title;\r\n    const area = location.state?.area;\r\n    const img = location.state?.img;\r\n\r\n    return (\r\n        <>\r\n            <Navbarlogged />\r\n            <div>\r\n                <h1>예약 정보 확인</h1>\r\n                <p>제목: {title}</p>\r\n                <p>지역: {area}</p>\r\n                <img src={img} alt=\"ground\" width=\"30%\" />\r\n            </div>\r\n            <div className=\"lsItem\">\r\n                <p>예약 날짜 </p>\r\n                <span onClick={() => setOpenDate(!openDate)}>\r\n                    {`${format(date[0].startDate, \"yy년MM월dd일\")}~${format(\r\n                        date[0].endDate,\r\n                        \"yy년MM월dd일\"\r\n                    )}`}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Mypage;\r\n\r\n\r\n// const Mypage = () => {\r\n//     let [myinfo] = useState(mydata)\r\n//     let [myres] = useState(myre)\r\n//     return (\r\n//         <>\r\n//             <Navbarlogged />\r\n//             <div>\r\n//                 {myinfo.map((a, i) => {\r\n//                     return (\r\n//                         <My myinfo={myinfo[i]} i={i} />\r\n//                     )\r\n//                 })\r\n//                 }\r\n//             </div>\r\n//             <div>\r\n//                 {myres.map((a, i) => {\r\n//                     return (\r\n//                         <Myres myres={myres[i]} i={i} />\r\n//                     )\r\n//                 })\r\n//                 }\r\n//             </div>\r\n\r\n//         </>\r\n//     )\r\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}