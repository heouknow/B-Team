{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Node.js_08\\\\Desktop\\\\23.10.25\\\\B_team\\\\src\\\\components\\\\navbar\\\\Navbarlogged.jsx\",\n  _s = $RefreshSig$();\n// Navbarlogged.jsx\n\nimport './navbar.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbarlogged = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get('http://localhost:3001/logged', {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.user_Id) {\n        setUser(response.data.user_Id);\n      }\n    }).catch(error => {\n      console.error('사용자 정보를 가져오는 중 오류 발생: ' + error);\n    });\n  }, []);\n  const goToHome = () => {\n    console.log(\"Logo clicked\"); // 콘솔에 로그 출력\n    navigate(\"/\");\n  };\n  const logged = () => {\n    axios.post('http://localhost:3001/mypageinfo', {\n      values\n    }).then(response => {\n      console.dir(response);\n    }).catch(err => console.log(err));\n    navigate(\"/mypage\", {});\n  };\n  const logout = () => {\n    axios.post('http://localhost:3001/logout', null, {\n      withCredentials: true\n    }).then(() => {\n      alert('로그아웃이 완료되었습니다.');\n      setUser(null);\n      navigate('/');\n    }).catch(error => {\n      console.error('로그아웃 중 오류 발생: ' + error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logo\",\n        onClick: goToHome,\n        children: \"Add in ground\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navItems\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logged\",\n          onClick: logged,\n          children: user ? `[ ${user} ]님 마이페이지` : '로그인하세요'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"navButton\",\n          onClick: logout,\n          children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbarlogged, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbarlogged;\nexport default Navbarlogged;\nvar _c;\n$RefreshReg$(_c, \"Navbarlogged\");","map":{"version":3,"names":["useNavigate","useState","useEffect","axios","jsxDEV","_jsxDEV","Navbarlogged","_s","user","setUser","navigate","get","withCredentials","then","response","data","user_Id","catch","error","console","goToHome","log","logged","post","values","dir","err","logout","alert","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Node.js_08/Desktop/23.10.25/B_team/src/components/navbar/Navbarlogged.jsx"],"sourcesContent":["// Navbarlogged.jsx\r\n\r\nimport './navbar.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Navbarlogged = () => {\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:3001/logged', {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        if (response.data.user_Id) {\r\n          setUser(response.data.user_Id);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('사용자 정보를 가져오는 중 오류 발생: ' + error);\r\n      });\r\n  }, []);\r\n\r\n  const goToHome = () => {\r\n    console.log(\"Logo clicked\"); // 콘솔에 로그 출력\r\n    navigate(\"/\");\r\n};\r\n\r\n  const logged = () => {\r\n    axios.post('http://localhost:3001/mypageinfo', {values})\r\n                            .then(response =>{ console.dir(response);                              \r\n                        })\r\n                        .catch(err => console.log(err))\r\n    navigate(\"/mypage\", {\r\n    \r\n  });\r\n  };\r\n\r\n  const logout = () => {\r\n    axios\r\n      .post('http://localhost:3001/logout', null, {\r\n        withCredentials: true,\r\n      })\r\n      .then(() => {\r\n        alert('로그아웃이 완료되었습니다.');\r\n        setUser(null);\r\n        navigate('/');\r\n      })\r\n      .catch((error) => {\r\n        console.error('로그아웃 중 오류 발생: ' + error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"navContainer\">\r\n      <span className=\"logo\" onClick={goToHome}>Add in ground</span>\r\n        <div className=\"navItems\">\r\n          <span className=\"logged\" onClick={logged}>\r\n            {user ? `[ ${user} ]님 마이페이지` : '로그인하세요'}\r\n          </span>\r\n          <button className=\"navButton\" onClick={logout}>\r\n            로그아웃\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbarlogged;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}